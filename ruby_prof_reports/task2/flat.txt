Measure Mode: allocations
Thread ID: 47266921724260
Fiber ID: 47266924473940
Total: 140137.000000
Sort by: self_time

 %self      total      self      wait     child     calls  name                           location
 48.86  68464.000 68464.000     0.000     0.000    10000   String#split                   
  7.14  10003.000 10003.000     0.000     0.000        1   <Class::IO>#readlines          
  6.04   8464.000  8464.000     0.000     0.000     8464   String#[]                      
  6.04   8464.000  8464.000     0.000     0.000     8464   String#upcase                  
  6.04  25392.000  8464.000     0.000 16928.000     8464   Optimization::TaskTwo#parse_session /home/btg/ruby_app/tinknetica/optimization/rails-optimization-task2/lib/task-2.rb:67
  5.48  27035.000  7682.000     0.000 19353.000     1536   Optimization::TaskTwo#collect_stats_from_user /home/btg/ruby_app/tinknetica/optimization/rails-optimization-task2/lib/task-2.rb:77
  4.14   5806.000  5806.000     0.000     0.000     3073   Array#sort                     
  3.29  130111.000  4612.000     0.000 125499.000     1539  *Array#each                     
  2.63   3688.000  3688.000     0.000     0.000     1536   Array#any?                     
  2.19   3073.000  3073.000     0.000     0.000     3073   Array#map                      
  2.19   3072.000  3072.000     0.000     0.000     3072   Integer#to_s                   
  2.19   3072.000  3072.000     0.000     0.000     1536   Class#new                      
  1.10   1537.000  1537.000     0.000     0.000     1537   Array#join                     
  1.10   1536.000  1536.000     0.000     0.000     1536   Array#reverse                  
  1.10   1536.000  1536.000     0.000     0.000     1536   Optimization::TaskTwo#parse_user /home/btg/ruby_app/tinknetica/optimization/rails-optimization-task2/lib/task-2.rb:58
  0.46    645.000   645.000     0.000     0.000     1536   Array#all?                     
  0.00  140134.000     4.000     0.000 140130.000        1   Optimization::TaskTwo#work     /home/btg/ruby_app/tinknetica/optimization/rails-optimization-task2/lib/task-2.rb:27
  0.00      3.000     3.000     0.000     0.000        1   <Class::IO>#write              
  0.00  105400.000     3.000     0.000 105397.000        1   Optimization::TaskTwo#load_file /home/btg/ruby_app/tinknetica/optimization/rails-optimization-task2/lib/task-2.rb:106
  0.00   3075.000     2.000     0.000  3073.000        1   Enumerable#group_by            
  0.00      2.000     2.000     0.000     0.000        1   Array#uniq                     
  0.00  140137.000     2.000     0.000 140135.000        1   [global]#                      profilers/task2/prof.rb:8
  0.00      1.000     1.000     0.000     0.000        1   <Module::Oj>#dump              
  0.00      5.000     1.000     0.000     4.000        1   Optimization::TaskTwo#write_file /home/btg/ruby_app/tinknetica/optimization/rails-optimization-task2/lib/task-2.rb:122
  0.00      1.000     1.000     0.000     0.000        1   NilClass#to_s                  
  0.00      0.000     0.000     0.000     0.000     1536   Array#max                      
  0.00      0.000     0.000     0.000     0.000     1536   Array#sum                      
  0.00      0.000     0.000     0.000     0.000     8464   String#to_i                    
  0.00      0.000     0.000     0.000     0.000     1536   Optimization::User#initialize  /home/btg/ruby_app/tinknetica/optimization/rails-optimization-task2/lib/optimization.rb:17
  0.00      0.000     0.000     0.000     0.000     1538   Array#count                    
  0.00      0.000     0.000     0.000     0.000        1   <Module::GC>#disable           

* recursively called methods

Columns are:

  %self     - The percentage of time spent in this method, derived from self_time/total_time.
  total     - The time spent in this method and its children.
  self      - The time spent in this method.
  wait      - The amount of time this method waited for other threads.
  child     - The time spent in this method's children.
  calls     - The number of times this method was called.
  name      - The name of the method.
  location  - The location of the method.

The interpretation of method names is:

  * MyObject#test - An instance method "test" of the class "MyObject"
  * <Object:MyObject>#test - The <> characters indicate a method on a singleton class.
